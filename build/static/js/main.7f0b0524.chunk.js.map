{"version":3,"sources":["services/firebase.js","contexts/AuthContext.js","components/Signup.js","modals/ConfirmationModal.js","modals/DeleteConfirmationModal.js","components/DisplayMeasurements.js","modals/EditPersonalInfoModal.js","modals/LogoutModal.js","modals/AddPersonalInfoModal.js","components/DisplayNavbar.js","modals/AddMeasurementsModal.js","modals/EditMeasurementsModal.js","components/Dashboard.js","components/Login.js","components/PrivateRoute.js","components/ForgotPassword.js","components/App.js","index.js"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","databaseURL","REACT_APP_REACT_APP_FIREBASE_DATABASEURL","projectId","storageBucket","messagingSenderId","appId","auth","db","firestore","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","userLoading","setUserLoading","useEffect","onAuthStateChanged","user","value","signup","email","password","a","createUserWithEmailAndPassword","result","sendEmailVerification","signOut","e","console","log","handleSignup","login","signInWithEmailAndPassword","logout","forgotPassword","sendPasswordResetEmail","Provider","Signup","emailRef","useRef","passwordRef","passwordConfirmationRef","error","setError","msg","setMsg","loading","setLoading","history","useHistory","delay","time","Promise","resolve","setTimeout","handleSignUp","preventDefault","current","push","Fragment","Container","className","style","minHeight","maxWidth","Card","Body","Alert","variant","Form","onSubmit","Group","id","Label","Control","type","required","ref","placeholder","Button","disabled","color","to","ConfirmationModal","props","Modal","show","confirmationModal","onHide","handleCloseConfirmationModal","backdrop","Header","Title","margin","Footer","onClick","handleShowAddPersonalInfo","DeleteConfirmationModal","showDeleteMeasurementConfirmationModal","closeDeleteMeasurementConfirmationModal","width","deleteMeasurement","document_id","closeDeleteMeasurementConfirmation","DisplayMeasurements","textAlign","marginTop","padding","InputGroup","Text","FormControl","fontWeight","onChange","filterMeasurements","target","measurements","map","item","measured_on_day","measured_at_time","display","gridTemplateColumns","justifyContent","Prepend","defaultValue","waist","chest","arms","quads","gap","handleShowEditMeasurements","setTempDocId","showDeleteMeasurementConfirmation","measurement_id","length","EditPersonalInfoModal","showEditPersInfo","handleCloseEditPersonalInfo","backgroundColor","personalInfo","editFirstNameRef","firstName","setIsSavePInfoChangesEnabled","editLastNameRef","lastName","editAgeRef","age","editSexRef","sex","isSavePInfoChangesEnabled","updatePersonalInfo","LogoutModal","handleLogout","showLoggedOut","handleCloseLoggedOut","AddPersonalInfoModal","showAddPersInfo","handleCloseAddPersonalInfo","firstNameRef","setFirstName","lastNameRef","setLastName","ageRef","setAge","sexRef","setSex","addPersonalInfo","DisplayNavbar","Navbar","expand","Brand","Toggle","aria-controls","Collapse","Nav","marginLeft","handleShowAddMeasurements","handleShowEditPersonalInfo","Link","handleShowLoggedOut","AddMeasurementsModal","showAddMeasurements","handleCloseAddMeasurements","addMeasurements","waistRef","armsRef","quadsRef","chestRef","armsSize","quadsSize","chestSize","waistSize","setChestSize","setArmsSize","setWaistSize","setQuadsSize","min","EditMeasurementsModal","showEditMeasurements","editWaistRef","waistEdited","setIsSaveMeasurementChangesEnabled","editChestRef","chestEdited","editArmsRef","armsEdited","editQuadsRef","quadsEdited","handleCloseEditMeasurements","isSaveMeasurementChangesEnabled","updateMeasurements","tempDocId","Dashboard","setMeasurements","copyOfMeasurements","setCopyOfMeasurements","setPersonalInfo","setShowAddMeasurements","setShowAddPersInfo","setShowEditPersInfo","setShowLoggedOut","setConfirmationModal","setShowEditMeasurements","setShowDeleteMeasurementConfirmationModal","setArmsEdited","setQuadsEdited","setChestEdited","setWaistEdited","handleShowConfirmationModal","getCurrentDateAndTime","completeDate","Date","day","getDate","month","getMonth","year","getFullYear","getHours","getMinutes","getSeconds","date","collection","doc","uid","set","generate","measured_on","alert","update","delete","orderBy","onSnapshot","response","tempArray","forEach","objToBeAdded","data","firstNamePassed","text","newArr","filter","includes","measurementEdited","index","findIndex","Login","handleLogin","emailVerified","code","PrivateRoute","Component","component","rest","render","ForgotPassword","message","setMessage","handleResetPassword","App","exact","path","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.7f0b0524.chunk.js","sourcesContent":["import firebase from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/firestore'\n\nconst app = firebase.initializeApp({\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_REACT_APP_FIREBASE_DATABASEURL,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_FIREBASE_APP_ID\n})\n\nexport const auth = app.auth()\nexport const db = app.firestore()\n\n\nexport default app","import React, { useState, useContext, useEffect } from 'react'\nimport { auth } from '../services/firebase'\n\n// creating an auth context\nconst AuthContext = React.createContext()\n\nexport function useAuth() {\n    return useContext(AuthContext)\n}\n\nexport function AuthProvider({ children }) {\n\n    const [currentUser, setCurrentUser] = useState(null)\n    const [userLoading, setUserLoading] = useState(true)\n\n\n    const signup = (email, password) => {\n        async function handleSignup() {\n            const result = await auth.createUserWithEmailAndPassword(email, password)\n            try {\n                result.user.sendEmailVerification()\n                auth.signOut()\n            }\n            catch (e) {\n                console.log(e)\n            }\n        }\n        return handleSignup()\n    }\n\n    const login = (email, password) => {\n        return auth.signInWithEmailAndPassword(email, password)\n    }\n\n    const logout = () => {\n        return auth.signOut()\n    }\n\n    const forgotPassword = (email) => {\n        return auth.sendPasswordResetEmail(email)\n    }\n\n    useEffect(() => {\n        // if new user -> set user in firebase\n        // useEffect will only load once \n        const unsubscribe = auth.onAuthStateChanged(user => {\n            setCurrentUser(user)\n            setUserLoading(false)\n        })\n\n        return unsubscribe\n    }, [])\n\n    const value = {\n        currentUser,\n        signup,\n        login,\n        logout,\n        forgotPassword,\n    }\n\n    return (\n        <AuthContext.Provider value={value}>\n            {!userLoading && children}\n        </AuthContext.Provider>\n\n\n    )\n}\n","import React, { useRef, useState } from 'react'\nimport { Form, Button, Card, Alert, Container } from 'react-bootstrap'\nimport { useAuth } from '../contexts/AuthContext'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport { Link, useHistory } from 'react-router-dom'\n// import {createUserDocument} from '../services/firebase'\n\n\nexport default function Signup() {\n\n    const emailRef = useRef()\n    const passwordRef = useRef()\n    const passwordConfirmationRef = useRef()\n    const { signup } = useAuth()\n    const [error, setError] = useState(null)\n    const [msg, setMsg] = useState(null)\n    const [loading, setLoading] = useState(false)\n    const history = useHistory()\n\n    function delay(time) {\n        return new Promise(function (resolve) {\n            setTimeout(resolve, time)\n        });\n    }\n\n    const handleSignUp = async (e) => {\n        e.preventDefault()\n\n        if (passwordRef.current.value !== passwordConfirmationRef.current.value) {\n            return setError('Passwords do not match!')\n        }\n        try {\n            setMsg('An email with the verification link has been sent to your inbox!');\n            setLoading(true);\n            await signup(emailRef.current.value, passwordRef.current.value);\n        } catch (e) {\n            setError(`Failed to create an account! ${e}`)\n        }\n\n        setLoading(false)\n        delay(7500)\n        history.push('/login')\n    }\n\n    return (\n        <React.Fragment>\n            <Container className=\"d-flex align-items-center justify-content-center\" style={{ minHeight: \"100vh\" }}>\n                <div className=\"w-100\" style={{ maxWidth: '400px' }}>\n                    <Card>\n                        <Card.Body>\n                            <h2 className=\"text-center mb-4\">Sign up</h2>\n                            {error && <Alert variant=\"danger\">{error}</Alert>}\n                            {msg && <Alert variant=\"success\">{msg}</Alert>}\n                            <Form onSubmit={handleSignUp}>\n                                <Form.Group id=\"email\" className=\"mt-2\">\n                                    <Form.Label>Email</Form.Label>\n                                    <Form.Control type=\"email\" required ref={emailRef} placeholder=\"Please enter your e-mail\"></Form.Control>\n                                </Form.Group>\n                                <Form.Group id=\"password\" className=\"mt-2\">\n                                    <Form.Label>Password</Form.Label>\n                                    <Form.Control type=\"password\" required ref={passwordRef} placeholder=\"Please enter the desired password\"></Form.Control>\n                                </Form.Group>\n                                <Form.Group id=\"passwordConfirmation\" className=\"mt-2\">\n                                    <Form.Label>Password confirmation</Form.Label>\n                                    <Form.Control type=\"password\" required ref={passwordConfirmationRef} placeholder=\"Please repeat your password\"></Form.Control>\n                                </Form.Group>\n                                <Button type=\"submit\" className=\"text-center w-100 mt-4\" disabled={loading}>Sign up</Button>\n                            </Form>\n                        </Card.Body>\n                    </Card>\n                    <div className=\"w-100 text-center mt-2\">\n                        <span style={{ color: 'white' }}>Already have an account?</span> <Link to=\"/login\">Log in</Link>\n                    </div>\n                </div>\n            </Container>\n        </React.Fragment >\n    )\n}\n","import React from 'react'\nimport Modal from 'react-bootstrap/Modal'\nimport { Button } from 'react-bootstrap'\n\nexport default function ConfirmationModal(props) {\n\n    return (\n        <Modal show={props.confirmationModal} onHide={props.handleCloseConfirmationModal} backdrop=\"static\">\n            <Modal.Header>\n                <Modal.Title style={{ margin: 'auto' }}>{props.error}</Modal.Title>\n            </Modal.Header>\n            <Modal.Footer>\n                <Button variant=\"danger\" onClick={() => {\n                    if (\n                        props.error === 'Your info has been successfully added!'\n                        || props.error === 'Your info has been successfully updated!'\n                        || props.error === 'Your measurement has been successfully deleted!'\n                    ) {\n                        props.handleCloseConfirmationModal()\n                    }\n                    else {\n                        props.handleCloseConfirmationModal();\n                        props.handleShowAddPersonalInfo()\n                    }\n                }}>\n                    Close\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    )\n\n}","import React from 'react'\nimport Modal from \"react-bootstrap/Modal\"\nimport { Button } from 'react-bootstrap'\n\nexport default function DeleteConfirmationModal(props) {\n    return (\n        <Modal show={props.showDeleteMeasurementConfirmationModal} onHide={props.closeDeleteMeasurementConfirmationModal} backdrop=\"static\">\n            <Modal.Header>\n                <Modal.Title>Are you sure you want to delete this measurement?</Modal.Title>\n            </Modal.Header>\n            <Modal.Footer>\n                <Button variant=\"success\" style={{ width: '80px' }} onClick={() => props.deleteMeasurement(props.document_id)}>\n                    Yes\n                </Button>\n                <Button variant=\"danger\" style={{ width: '80px' }} onClick={() => props.closeDeleteMeasurementConfirmation()}>\n                    No\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    )\n}","import React from 'react'\nimport { Button } from 'react-bootstrap'\nimport '../style.css'\nimport FormControl from 'react-bootstrap/FormControl'\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport DeleteConfirmationModal from '../modals/DeleteConfirmationModal'\n\nexport default function DisplayMeasurements(props) {\n\n\n    return (\n        <>\n            <div style={{ color: 'white', textAlign: 'center', width: '80%', margin: 'auto', marginTop: '30px', padding: '0' }}>\n                <InputGroup className=\"mb-3 searchInputGroup\">\n                    <InputGroup.Text>Search by date</InputGroup.Text>\n                    <FormControl placeholder=\"dd/mm/yyyy\" style={{ textAlign: 'center', fontWeight: '500' }} onChange={(e) => props.filterMeasurements(e.target.value)} />\n                </InputGroup>\n            </div>\n            <div className=\"measurementsWrapper\">\n                {props.measurements && props.measurements.map(item =>\n                    <div className=\"measurementDataWrapper\" key={item.measurement_id}>\n                        <h4>Measured on: {item.measured_on_day} </h4>\n                        <h4>Measured at: {item.measured_at_time} </h4>\n                        <InputGroup className=\"mb-3\">\n                            <div style={{ display: 'grid', gridTemplateColumns: '100px 1fr 0.4fr', width: '100%', marginTop: '10px' }}>\n                                <InputGroup.Text style={{ fontWeight: '700', justifyContent: 'center' }}>Body part</InputGroup.Text>\n                                <InputGroup.Text style={{ fontWeight: '700', justifyContent: 'center' }}>Value</InputGroup.Text>\n                                <InputGroup.Text style={{ fontWeight: '700', justifyContent: 'center' }}>Unit</InputGroup.Text>\n                            </div>\n                            <InputGroup.Prepend style={{ display: 'grid', gridTemplateColumns: '100px 1fr 0.4fr', margin: 'auto', marginTop: '10px', width: '100%' }}>\n                                <InputGroup.Text style={{ fontWeight: '700', justifyContent: 'center' }}>Waist</InputGroup.Text>\n                                <FormControl defaultValue={`${item.waist}`} style={{ textAlign: 'center', fontWeight: '500' }} disabled={true} />\n                                <InputGroup.Text style={{ fontWeight: '700', justifyContent: 'center' }}>cm</InputGroup.Text>\n\n                                <InputGroup.Text style={{ fontWeight: '700', justifyContent: 'center' }}>Chest</InputGroup.Text>\n                                <FormControl defaultValue={`${item.chest}`} style={{ textAlign: 'center', fontWeight: '500' }} disabled={true} />\n                                <InputGroup.Text style={{ fontWeight: '700', justifyContent: 'center' }} disabled={true}>cm</InputGroup.Text>\n\n                                <InputGroup.Text style={{ fontWeight: '700', justifyContent: 'center' }}>Arms</InputGroup.Text>\n                                <FormControl defaultValue={`${item.arms}`} style={{ textAlign: 'center', fontWeight: '500' }} disabled={true} />\n                                <InputGroup.Text style={{ fontWeight: '700', justifyContent: 'center' }} disabled={true}>cm</InputGroup.Text>\n\n                                <InputGroup.Text style={{ fontWeight: '700', justifyContent: 'center' }} >Quads</InputGroup.Text>\n                                <FormControl defaultValue={`${item.quads}`} style={{ textAlign: 'center', fontWeight: '500' }} disabled={true} />\n                                <InputGroup.Text style={{ fontWeight: '700', justifyContent: 'center' }} disabled={true}>cm</InputGroup.Text>\n                            </InputGroup.Prepend>\n                        </InputGroup>\n                        <div className=\"measurementsButtonsWrapper\" style={{ display: 'flex', gap: '10px', marginTop: '10px', justifyContent: 'space-evenly' }}>\n                            <Button onClick={() => {\n                                props.handleShowEditMeasurements(item.document_id)\n                                props.setTempDocId(item.document_id)\n                            }}>Edit</Button>\n                            <Button onClick={() => props.showDeleteMeasurementConfirmation()} variant=\"danger\">Delete</Button>\n                        </div>\n                        <DeleteConfirmationModal\n                            showDeleteMeasurementConfirmation={props.showDeleteMeasurementConfirmation}\n                            showDeleteMeasurementConfirmationModal={props.showDeleteMeasurementConfirmationModal}\n                            document_id={item.document_id}\n                            deleteMeasurement={props.deleteMeasurement}\n                            closeDeleteMeasurementConfirmation={props.closeDeleteMeasurementConfirmation}\n                        />\n                    </div>\n\n                )}\n                {props.measurements.length === 0 ?\n                    <h1 style={{ color: 'white', marginTop: '50px', textAlign: 'center' }}>No measurements</h1>\n                    :\n                    ''\n                }\n            </div >\n        </>\n    )\n\n}","import React from 'react'\nimport Modal from 'react-bootstrap/Modal'\nimport { Button } from 'react-bootstrap'\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport FormControl from 'react-bootstrap/FormControl'\n\nexport default function EditPersonalInfoModal(props) {\n\n    return (\n        <Modal show={props.showEditPersInfo} onHide={props.handleCloseEditPersonalInfo} backdrop=\"static\" >\n            <Modal.Header style={{ backgroundColor: '#0d6efd' }}>\n                <Modal.Title style={{ margin: 'auto', color: 'white' }}>Edit personal info</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n\n                <InputGroup className=\"mb-3\">\n                    {props.personalInfo.map(item => (\n                        <InputGroup.Prepend style={{ display: 'grid', gridTemplateColumns: '0.5fr 2.5fr', margin: 'auto' }} key={item.id}>\n                            <InputGroup.Text>First name</InputGroup.Text>\n                            <FormControl ref={props.editFirstNameRef} defaultValue={item.firstName} onChange={() => props.setIsSavePInfoChangesEnabled(true)} />\n                            <InputGroup.Text>Last name</InputGroup.Text>\n                            <FormControl ref={props.editLastNameRef} defaultValue={item.lastName} onChange={() => props.setIsSavePInfoChangesEnabled(true)} />\n                            <InputGroup.Text>Age</InputGroup.Text>\n                            <FormControl ref={props.editAgeRef} defaultValue={item.age} onChange={() => props.setIsSavePInfoChangesEnabled(true)} />\n                            <InputGroup.Text>Sex</InputGroup.Text>\n                            <FormControl ref={props.editSexRef} defaultValue={item.sex} onChange={() => props.setIsSavePInfoChangesEnabled(true)} />\n                        </InputGroup.Prepend>\n                    ))}\n                </InputGroup>\n                <Modal.Footer>\n                    <Button variant=\"danger\" onClick={props.handleCloseEditPersonalInfo}>\n                        Close\n                    </Button>\n                    <Button disabled={!props.isSavePInfoChangesEnabled} variant=\"success\" onClick={() => props.updatePersonalInfo()}>\n                        Save Changes\n                    </Button>\n                </Modal.Footer>\n            </Modal.Body>\n        </Modal>\n    )\n\n}","import React from 'react'\nimport { useHistory } from 'react-router'\nimport { Button } from 'react-bootstrap'\nimport Modal from \"react-bootstrap/Modal\"\nimport { useAuth } from '../contexts/AuthContext'\n\nexport default function LogoutModal(props) {\n\n    const { logout } = useAuth()\n    const history = useHistory()\n\n    const handleLogout = async () => {\n        try {\n            logout()\n            history.push('/login')\n        }\n        catch (e) {\n            console.log(e)\n        }\n    }\n\n    return (\n        <Modal show={props.showLoggedOut} onHide={props.handleCloseLoggedOut} backdrop=\"static\">\n            <Modal.Header>\n                <Modal.Title>Are you sure you want to log out?</Modal.Title>\n            </Modal.Header>\n            <Modal.Footer>\n                <Button variant=\"success\" onClick={handleLogout} style={{ width: '80px' }}>\n                    Yes\n                </Button>\n                <Button variant=\"danger\" onClick={props.handleCloseLoggedOut} style={{ width: '80px' }}>\n                    No\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    )\n\n}\n\n\n","import React from 'react'\nimport Modal from 'react-bootstrap/Modal'\nimport { Button } from 'react-bootstrap'\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport FormControl from 'react-bootstrap/FormControl'\n\nexport default function AddPersonalInfoModal(props) {\n    return (\n        <Modal show={props.showAddPersInfo} onHide={props.handleCloseAddPersonalInfo} backdrop=\"static\">\n            <Modal.Header style={{ backgroundColor: '#0d6efd' }}>\n                <Modal.Title style={{ margin: 'auto', color: 'white' }}>Add personal info</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <InputGroup className=\"mb-3\">\n                    <InputGroup.Prepend style={{ display: 'flex' }}>\n                        <InputGroup.Text>First name</InputGroup.Text>\n                        <FormControl ref={props.firstNameRef} value={props.firstName} onChange={e => props.setFirstName(e.target.value)} />\n                        <InputGroup.Text>Last name</InputGroup.Text>\n                        <FormControl ref={props.lastNameRef} value={props.lastName} onChange={e => props.setLastName(e.target.value)} />\n                    </InputGroup.Prepend>\n\n                </InputGroup>\n                <InputGroup className=\"mb-3\">\n                    <InputGroup.Prepend style={{ display: 'flex' }}>\n                        <InputGroup.Text>Age</InputGroup.Text>\n                        <FormControl ref={props.ageRef} value={props.age} onChange={e => props.setAge(e.target.value)} />\n                        <InputGroup.Text>Sex</InputGroup.Text>\n                        <FormControl ref={props.sexRef} value={props.sex} onChange={e => props.setSex(e.target.value)} />\n                    </InputGroup.Prepend>\n\n                </InputGroup>\n                <Modal.Footer>\n                    <Button variant=\"danger\" onClick={props.handleCloseAddPersonalInfo}>\n                        Close\n                    </Button>\n                    <Button variant=\"success\" onClick={() => props.addPersonalInfo()}>\n                        Add info\n                    </Button>\n                </Modal.Footer>\n            </Modal.Body>\n        </Modal>\n    )\n}","import React from 'react'\nimport { Nav, Button, Navbar } from 'react-bootstrap'\nimport '../style.css'\n// import logo from '../images/gym_logo.jpg'\n\nexport default function DisplayNavbar(props) {\n\n    return (\n        <Navbar expand=\"lg\" className=\"d-flex flex-row\" style={{ padding: '20px', backgroundColor: 'rgba(255,255,255,0.2)' }}>\n            {\n                props.personalInfo.length > 0 && props.personalInfo.map(item => (\n                    <div key={item.id} id=\"navbarBrand\">\n                        <span id=\"navbarBrand-name\">\n                            <Navbar.Brand style={{ fontWeight: '500', color: 'rgba(255,255,255,0.75)' }}>\n                                {/* <img src={logo} style={{ width: '30px', height: '30px' }}></img> */}\n                                <span>{item.firstName} {item.lastName}</span>\n                            </Navbar.Brand></span><br />\n                        <span id=\"navbarBrand-email\"><Navbar.Brand style={{ fontWeight: '400', color: 'rgba(255,255,255,0.75)' }}>{props.currentUser.email}</Navbar.Brand></span>\n                    </div>\n                ))}\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" style={{ backgroundColor: 'rgba(255,255,255,0.4)' }} />\n            <Navbar.Collapse id=\"basic-navbar-nav\" style={{ textAlign: 'center', }}>\n                <Nav className=\"d-flex gap-4\" style={{ marginLeft: 'auto' }} >\n                    <br />\n                    <Button id=\"addMeasurementsButton\" onClick={() => props.handleShowAddMeasurements()} >Add today's measurements</Button>\n                    {\n                        props.personalInfo.length === 0 ?\n                            <Button id=\"addInfoButton\" onClick={props.handleShowAddPersonalInfo} style={{ padding: '10px' }}>Add personal info</Button>\n                            :\n                            <Button id=\"editPersInfoButton\" onClick={props.handleShowEditPersonalInfo} style={{ padding: '10px' }}>Edit personal info</Button>\n                    }\n\n                    <Nav.Link id=\"logOutButton\" onClick={props.handleShowLoggedOut}><span id=\"test\">Log out</span></Nav.Link>\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar >\n    )\n\n\n}","import React from 'react'\nimport Modal from 'react-bootstrap/Modal'\nimport { Button } from 'react-bootstrap'\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport FormControl from 'react-bootstrap/FormControl'\n\nexport default function AddMeasurementsModal(props) {\n\n    const {\n        showAddMeasurements,\n        handleCloseAddMeasurements,\n        addMeasurements,\n        waistRef,\n        armsRef,\n        quadsRef,\n        chestRef,\n        armsSize,\n        quadsSize,\n        chestSize,\n        waistSize,\n        setChestSize,\n        setArmsSize,\n        setWaistSize,\n        setQuadsSize\n    } = props\n\n    return (\n        <Modal show={showAddMeasurements} onHide={handleCloseAddMeasurements} backdrop=\"static\">\n            <Modal.Header style={{ backgroundColor: '#0d6efd' }}>\n                <Modal.Title style={{ margin: 'auto', color: 'white' }}>Add measurements</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <InputGroup className=\"mb-3\">\n                    <InputGroup.Prepend style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', margin: 'auto', gap: '20px', padding: '10px' }}>\n                        <div>\n                            <InputGroup.Text>Waist size (cm)</InputGroup.Text>\n                            <FormControl ref={waistRef} value={waistSize} onChange={e => setWaistSize(e.target.value)} type=\"number\" min=\"0\" />\n                        </div>\n                        <div>\n                            <InputGroup.Text>Quads size (cm)</InputGroup.Text>\n                            <FormControl ref={quadsRef} value={quadsSize} onChange={e => setQuadsSize(e.target.value)} type=\"number\" min=\"0\" />\n                        </div>\n                        <div>\n                            <InputGroup.Text>Chest size (cm)</InputGroup.Text>\n                            <FormControl ref={chestRef} value={chestSize} onChange={e => setChestSize(e.target.value)} type=\"number\" min=\"0\" />\n                        </div>\n                        <div>\n                            <InputGroup.Text>Arms size (cm)</InputGroup.Text>\n                            <FormControl ref={armsRef} value={armsSize} onChange={e => setArmsSize(e.target.value)} type=\"number\" min=\"0\" />\n                        </div>\n                    </InputGroup.Prepend>\n                </InputGroup>\n                <Modal.Footer>\n                    <Button variant=\"danger\" onClick={handleCloseAddMeasurements}>\n                        Close\n                    </Button>\n                    <Button variant=\"success\" onClick={() => addMeasurements()}>\n                        Add info\n                    </Button>\n                </Modal.Footer>\n            </Modal.Body>\n        </Modal>\n    )\n}","import React from 'react'\nimport Modal from 'react-bootstrap/Modal'\nimport { Button } from 'react-bootstrap'\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport FormControl from 'react-bootstrap/FormControl'\n\nexport default function EditMeasurementsModal(props) {\n\n\n    return (\n        <Modal show={props.showEditMeasurements} onHide={props.handleCloseEditPersonalInfo} backdrop=\"static\" >\n            <Modal.Header style={{ backgroundColor: '#0d6efd' }}>\n                <Modal.Title style={{ margin: 'auto', color: 'white' }}>Edit measurements</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n\n                <InputGroup className=\"mb-3\" style={{ justifyContent: 'center' }}>\n                    <InputGroup.Prepend style={{ display: 'grid', gridTemplateColumns: '0.5fr 2.5fr', margin: 'auto' }}>\n                        <InputGroup.Text>Waist</InputGroup.Text>\n                        <FormControl ref={props.editWaistRef} defaultValue={props.waistEdited} onChange={() => props.setIsSaveMeasurementChangesEnabled(true)} type=\"number\" />\n                        <InputGroup.Text>Chest</InputGroup.Text>\n                        <FormControl ref={props.editChestRef} defaultValue={props.chestEdited} onChange={() => props.setIsSaveMeasurementChangesEnabled(true)} type=\"number\" />\n                        <InputGroup.Text>Arms</InputGroup.Text>\n                        <FormControl ref={props.editArmsRef} defaultValue={props.armsEdited} onChange={() => props.setIsSaveMeasurementChangesEnabled(true)} type=\"number\" />\n                        <InputGroup.Text>Quads</InputGroup.Text>\n                        <FormControl ref={props.editQuadsRef} defaultValue={props.quadsEdited} onChange={() => props.setIsSaveMeasurementChangesEnabled(true)} type=\"number\" />\n                    </InputGroup.Prepend>\n                </InputGroup>\n                <Modal.Footer>\n                    <Button variant=\"danger\" onClick={props.handleCloseEditMeasurements}>\n                        Close\n                    </Button>\n                    <Button disabled={!props.isSaveMeasurementChangesEnabled} variant=\"success\" onClick={() => {\n                        props.updateMeasurements(props.tempDocId)\n                    }}>\n                        Save Changes\n                    </Button>\n                </Modal.Footer>\n            </Modal.Body>\n        </Modal>\n    )\n}","import React, { useState, useRef, useEffect } from 'react'\nimport { useAuth } from '../contexts/AuthContext'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport '../style.css'\nimport { db } from '../services/firebase'\nimport { generate } from 'shortid'\nimport ConfirmationModal from '../modals/ConfirmationModal'\nimport DisplayMeasurements from './DisplayMeasurements'\nimport EditPersonalInfoModal from '../modals/EditPersonalInfoModal'\nimport LogoutModal from '../modals/LogoutModal'\nimport AddPersonalInfoModal from '../modals/AddPersonalInfoModal'\nimport DisplayNavbar from './DisplayNavbar'\nimport AddMeasurementsModal from '../modals/AddMeasurementsModal'\nimport EditMeasurementsModal from '../modals/EditMeasurementsModal'\n\nexport default function Dashboard() {\n\n    // getting the current user context\n    const { currentUser } = useAuth()\n\n    // declaring references from inputs ------\n    const firstNameRef = useRef()\n    const lastNameRef = useRef()\n    const ageRef = useRef()\n    const editAgeRef = useRef()\n    const sexRef = useRef()\n    const editSexRef = useRef()\n    const editFirstNameRef = useRef()\n    const editLastNameRef = useRef()\n    const waistRef = useRef()\n    const armsRef = useRef()\n    const quadsRef = useRef()\n    const chestRef = useRef()\n    const editWaistRef = useRef()\n    const editArmsRef = useRef()\n    const editChestRef = useRef()\n    const editQuadsRef = useRef()\n    // ----------------------\n\n    // initializing needed states  -----------\n    const [measurements, setMeasurements] = useState([])\n    const [copyOfMeasurements, setCopyOfMeasurements] = useState()\n    const [personalInfo, setPersonalInfo] = useState([])\n    const [firstName, setFirstName] = useState('')\n    const [lastName, setLastName] = useState('')\n    const [age, setAge] = useState('')\n    const [sex, setSex] = useState('')\n    const [armsSize, setArmsSize] = useState('')\n    const [quadsSize, setQuadsSize] = useState('')\n    const [chestSize, setChestSize] = useState('')\n    const [waistSize, setWaistSize] = useState('')\n    const [showAddMeasurements, setShowAddMeasurements] = useState(false)\n    const [isSavePInfoChangesEnabled, setIsSavePInfoChangesEnabled] = useState(false)\n    const [isSaveMeasurementChangesEnabled, setIsSaveMeasurementChangesEnabled] = useState(false)\n    const [showAddPersInfo, setShowAddPersInfo] = useState(false)\n    const [showEditPersInfo, setShowEditPersInfo] = useState(false)\n    const [showLoggedOut, setShowLoggedOut] = useState(false)\n    const [confirmationModal, setConfirmationModal] = useState(false)\n    const [showEditMeasurements, setShowEditMeasurements] = useState(false)\n    const [showDeleteMeasurementConfirmationModal, setShowDeleteMeasurementConfirmationModal] = useState(false)\n    const [armsEdited, setArmsEdited] = useState('')\n    const [quadsEdited, setQuadsEdited] = useState('')\n    const [chestEdited, setChestEdited] = useState('')\n    const [waistEdited, setWaistEdited] = useState('')\n    const [error, setError] = useState('')\n    const [tempDocId, setTempDocId] = useState(null)\n    // ---------------------\n\n    // declaring functions who when called, change the behaviour of the modals \n    const handleShowAddMeasurements = () => setShowAddMeasurements(true)\n    const handleCloseAddMeasurements = () => setShowAddMeasurements(false)\n    const handleCloseEditPersonalInfo = () => {\n        setShowEditPersInfo(false)\n        setIsSavePInfoChangesEnabled(false)\n    }\n    const handleShowEditPersonalInfo = () => setShowEditPersInfo(true)\n    const handleCloseAddPersonalInfo = () => setShowAddPersInfo(false)\n    const handleShowAddPersonalInfo = () => setShowAddPersInfo(true)\n    const handleShowLoggedOut = () => setShowLoggedOut(true)\n    const handleCloseLoggedOut = () => setShowLoggedOut(false)\n    const handleShowConfirmationModal = () => setConfirmationModal(true)\n    const handleCloseConfirmationModal = () => {\n        setConfirmationModal(false)\n        setShowAddPersInfo(false)\n        setIsSavePInfoChangesEnabled(false)\n    }\n    const handleShowEditMeasurements = (id) => {\n        setShowEditMeasurements(true)\n        const measurementEdited = [...measurements]\n        const index = measurementEdited.findIndex((item) => item.document_id === id)\n        setArmsEdited(measurementEdited[index].arms)\n        setQuadsEdited(measurementEdited[index].quads)\n        setChestEdited(measurementEdited[index].chest)\n        setWaistEdited(measurementEdited[index].waist)\n    }\n\n    const handleCloseEditMeasurements = () => {\n        setShowEditMeasurements(false)\n        setIsSaveMeasurementChangesEnabled(false)\n    }\n    const showDeleteMeasurementConfirmation = () => setShowDeleteMeasurementConfirmationModal(true)\n    const closeDeleteMeasurementConfirmation = () => setShowDeleteMeasurementConfirmationModal(false)\n    // --------------------\n\n    // function that returns a formatted date 'dd/mm/yyyy' and time 'hh:mm:ss'\n    const getCurrentDateAndTime = () => {\n        const completeDate = new Date()\n        const day = completeDate.getDate() < 10 ? '0' + completeDate.getDate() : completeDate.getDate()\n        let month = completeDate.getMonth() + 1\n        if (month < 10) {\n            month = '0' + month\n        }\n        const year = completeDate.getFullYear()\n        const time = (completeDate.getHours() < 10 ? '0' + completeDate.getHours() : completeDate.getHours()) + ':' + (completeDate.getMinutes() < 10 ? '0' + completeDate.getMinutes() : completeDate.getMinutes()) + ':' + (completeDate.getSeconds() < 10 ? '0' + completeDate.getSeconds() : completeDate.getSeconds())\n        const date = day + '/' + month + '/' + year\n\n        return { time, date }\n    }\n\n    // fetching data from firestore - measurements + personal info\n    const fetchData = () => {\n        db.collection('users')\n            .doc(currentUser.uid)\n            .collection('measurements')\n            .orderBy(\"measured_on\", \"desc\")\n            .onSnapshot(response => {\n                const tempArray = []\n                response.forEach((item) => {\n                    const objToBeAdded = {\n                        document_id: item.id,\n                        measured_on_day: item.measured_on_day,\n                        measured_at_time: item.measured_at_time,\n                        ...item.data()\n                    }\n                    tempArray.push(objToBeAdded)\n                })\n                setMeasurements(tempArray)\n                setCopyOfMeasurements(tempArray)\n            })\n\n\n        db.collection('users')\n            .doc(currentUser.uid)\n            .collection('personal-info')\n            .onSnapshot(response => {\n                const tempArray = []\n                response.forEach((item) => {\n                    const objToBeAdded = {\n                        id: item.id,\n                        ...item.data()\n                    }\n                    tempArray.push(objToBeAdded)\n                })\n                setPersonalInfo(tempArray)\n                if (personalInfo.length === 0) {\n                    setFirstName('')\n                    setLastName('')\n                    setAge('')\n                    setSex('')\n                }\n            })\n    }\n\n    // adding personal info from inputs straight to firestore\n    const addPersonalInfo = async () => {\n        if (!firstNameRef.current.value || !lastNameRef.current.value) {\n            if (firstNameRef.current.value) {\n                setError('Attention! Type your last name in order to continue!');\n            }\n            else\n                if (lastNameRef.current.value) {\n                    setError('Attention! Type your first name in order to continue!');\n                }\n                else {\n                    setError('Attention! Both first name and last name must be typed in order to continue!');\n                }\n            handleCloseAddPersonalInfo()\n            handleShowConfirmationModal()\n            return\n        }\n        else {\n            db.collection('users')\n                .doc(currentUser.uid)\n                .collection('personal-info')\n                .doc('Informatii personale')\n                .set({\n                    id: generate(),\n                    firstName: firstNameRef.current.value,\n                    lastName: lastNameRef.current.value,\n                    age: ageRef.current.value,\n                    sex: sexRef.current.value\n                })\n            setError('Your info has been successfully added!')\n            handleCloseAddPersonalInfo()\n            handleShowConfirmationModal()\n        }\n\n    }\n\n    // adding measurements from inputs straight to firestore\n    const addMeasurements = async () => {\n        await db.collection('users')\n            .doc(currentUser.uid)\n            .collection('measurements')\n            .doc()\n            .set({\n                measurement_id: generate(),\n                arms: armsRef.current.value,\n                quads: quadsRef.current.value,\n                waist: waistRef.current.value,\n                chest: chestRef.current.value,\n                measured_on_day: getCurrentDateAndTime().date,\n                measured_at_time: getCurrentDateAndTime().time,\n                measured_on: new Date()\n            })\n        try {\n            setError('Your info has been successfully added!')\n            handleCloseAddMeasurements()\n            handleShowConfirmationModal()\n            setWaistSize('')\n            setArmsSize('')\n            setQuadsSize('')\n            setChestSize('')\n        }\n        catch (e) {\n            alert(e)\n        }\n\n\n\n    }\n\n    // function that updates personal info data in firestore\n    const updatePersonalInfo = async () => {\n        await db.collection('users')\n            .doc(currentUser.uid)\n            .collection('personal-info')\n            .doc('Informatii personale')\n            .update({\n                firstName: editFirstNameRef.current.value,\n                lastName: editLastNameRef.current.value,\n                age: editAgeRef.current.value,\n                sex: editSexRef.current.value\n            })\n        try {\n            setError('Your info has been successfully updated!')\n            handleCloseEditPersonalInfo()\n            handleShowConfirmationModal()\n        }\n        catch (e) {\n            alert(e)\n        }\n    }\n\n    // function that deletes measurements from firestore\n    const deleteMeasurement = async (id) => {\n        await db.collection('users')\n            .doc(currentUser.uid)\n            .collection('measurements')\n            .doc(id)\n            .delete()\n        try {\n            setShowDeleteMeasurementConfirmationModal(false)\n            setError('Your measurement has been successfully deleted!')\n            handleShowConfirmationModal()\n        }\n        catch (e) {\n            alert(e)\n        }\n    }\n\n    const updateMeasurements = async (id) => {\n        await db.collection('users')\n            .doc(currentUser.uid)\n            .collection('measurements')\n            .doc(id)\n            .update({\n                waist: editWaistRef.current.value,\n                arms: editArmsRef.current.value,\n                chest: editChestRef.current.value,\n                quads: editQuadsRef.current.value\n            })\n        try {\n            setError('Your info has been successfully updated!')\n            handleCloseEditMeasurements()\n            handleShowConfirmationModal()\n        }\n        catch (e) {\n            alert(`${e}`)\n        }\n    }\n\n    const filterMeasurements = (text) => {\n        if (text !== '') {\n            // const tempText = text\n            let newArr = measurements.filter(item => item.measured_on_day.includes(text))\n            setMeasurements(newArr)\n            newArr = copyOfMeasurements.filter(item => item.measured_on_day.includes(text))\n            if (text !== '' && newArr.length > 0) {\n                setMeasurements(newArr)\n            }\n        }\n        else if (text === '') {\n            setMeasurements(copyOfMeasurements)\n        }\n\n    }\n\n    // calling fetchData once, as soon as component loads\n    useEffect(() => {\n        fetchData()\n    }, [])\n\n    return (\n        <React.Fragment>\n\n            <DisplayNavbar\n                personalInfo={personalInfo}\n                currentUser={currentUser}\n                handleShowAddPersonalInfo={handleShowAddPersonalInfo}\n                handleShowEditPersonalInfo={handleShowEditPersonalInfo}\n                handleShowLoggedOut={handleShowLoggedOut}\n                handleShowAddMeasurements={handleShowAddMeasurements}\n            />\n\n            <AddMeasurementsModal\n                showAddMeasurements={showAddMeasurements}\n                handleCloseAddMeasurements={handleCloseAddMeasurements}\n                addMeasurements={addMeasurements}\n                waistRef={waistRef}\n                armsRef={armsRef}\n                quadsRef={quadsRef}\n                chestRef={chestRef}\n                armsSize={armsSize}\n                quadsSize={quadsSize}\n                chestSize={chestSize}\n                waistSize={waistSize}\n                setChestSize={setChestSize}\n                setArmsSize={setArmsSize}\n                setWaistSize={setWaistSize}\n                setQuadsSize={setQuadsSize}\n                editWaistRef={editWaistRef}\n                editArmsRef={editArmsRef}\n                editChestRef={editChestRef}\n                editQuadsRef={editQuadsRef}\n            />\n\n            {   // render AddPersonalInfoModal only if logged user doesnt have any personal info, else, render edit modal\n                personalInfo.length === 0 ?\n\n                    <AddPersonalInfoModal\n                        showAddPersInfo={showAddPersInfo}\n                        handleCloseAddPersonalInfo={handleCloseAddPersonalInfo}\n                        firstNameRef={firstNameRef}\n                        firstName={firstName}\n                        setFirstName={setFirstName}\n                        lastNameRef={lastNameRef}\n                        lastName={lastName}\n                        setLastName={setLastName}\n                        ageRef={ageRef}\n                        age={age}\n                        setAge={setAge}\n                        sexRef={sexRef}\n                        sex={sex}\n                        setSex={setSex}\n                        addPersonalInfo={addPersonalInfo}\n                    />\n                    :\n                    <EditPersonalInfoModal\n                        showEditPersInfo={showEditPersInfo}\n                        handleCloseEditPersonalInfo={handleCloseEditPersonalInfo}\n                        personalInfo={personalInfo}\n                        editFirstNameRef={editFirstNameRef}\n                        editLastNameRef={editLastNameRef}\n                        editAgeRef={editAgeRef}\n                        editSexRef={editSexRef}\n                        updatePersonalInfo={updatePersonalInfo}\n                        isSavePInfoChangesEnabled={isSavePInfoChangesEnabled}\n                        setIsSavePInfoChangesEnabled={setIsSavePInfoChangesEnabled}\n                        firstNamePassed={firstName}\n                    />\n            }\n\n            {/* render logout modal */}\n            <LogoutModal\n                showLoggedOut={showLoggedOut}\n                handleCloseLoggedOut={handleCloseLoggedOut}\n            />\n\n            {/* confirmation modal thats being rendered on errors or succeded actions */}\n            <ConfirmationModal\n                confirmationModal={confirmationModal}\n                handleCloseConfirmationModal={handleCloseConfirmationModal}\n                handleShowAddPersonalInfo={handleShowAddPersonalInfo}\n                error={error}\n                handleCloseEditPersonalInfo={handleCloseEditPersonalInfo}\n            />\n\n            {/* displays all available measurements */}\n            <DisplayMeasurements\n                measurements={measurements}\n                deleteMeasurement={deleteMeasurement}\n                filterMeasurements={filterMeasurements}\n                handleShowEditMeasurements={handleShowEditMeasurements}\n                setTempDocId={setTempDocId}\n                showDeleteMeasurementConfirmation={showDeleteMeasurementConfirmation}\n                showDeleteMeasurementConfirmationModal={showDeleteMeasurementConfirmationModal}\n                closeDeleteMeasurementConfirmation={closeDeleteMeasurementConfirmation}\n            />\n\n            {/* edit modal for measurements */}\n            <EditMeasurementsModal\n                showEditMeasurements={showEditMeasurements}\n                waistEdited={waistEdited}\n                chestEdited={chestEdited}\n                armsEdited={armsEdited}\n                quadsEdited={quadsEdited}\n                editArmsRef={editArmsRef}\n                editChestRef={editChestRef}\n                editQuadsRef={editQuadsRef}\n                editWaistRef={editWaistRef}\n                isSaveMeasurementChangesEnabled={isSaveMeasurementChangesEnabled}\n                setIsSaveMeasurementChangesEnabled={setIsSaveMeasurementChangesEnabled}\n                handleCloseEditMeasurements={handleCloseEditMeasurements}\n                tempDocId={tempDocId}\n                updateMeasurements={updateMeasurements}\n            />\n\n        </React.Fragment >\n    )\n}\n","import React, { useRef, useState } from 'react'\nimport { Form, Button, Card, Alert, Container } from 'react-bootstrap'\nimport { useAuth } from '../contexts/AuthContext'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport { Link, useHistory } from 'react-router-dom'\n\nexport default function Login() {\n\n    const emailRef = useRef()\n    const passwordRef = useRef()\n    const { login } = useAuth()\n    const [error, setError] = useState(null)\n    const [loading, setLoading] = useState(false)\n    const history = useHistory()\n\n    const handleLogin = async (e) => {\n        e.preventDefault()\n\n        try {\n            setError('');\n            setLoading(true);\n            const userInfo = await login(emailRef.current.value, passwordRef.current.value);\n            if (userInfo.user.emailVerified) {\n                history.push('/')\n            }\n            else {\n                setError('Please verify your email!')\n            }\n        } catch (e) {\n            setError(e.code === 'auth/user-not-found' ? 'User does not exist or wrong email! Sign up or check email credential!' : e.code === 'auth/wrong-password' ? 'Invalid password!' : 'Failed to sign in!')\n        }\n        setLoading(false);\n    }\n\n    return (\n        <React.Fragment>\n            <Container className=\"d-flex align-items-center justify-content-center\" style={{ minHeight: \"100vh\" }}>\n                <div className=\"w-100\" style={{ maxWidth: '400px' }}>\n                    <Card>\n                        <Card.Body>\n                            <h2 className=\"text-center mb-4\">Sign in</h2>\n                            {error && <Alert variant=\"danger\">{error}</Alert>}\n                            <Form onSubmit={(e) => handleLogin(e)}>\n                                <Form.Group id=\"email\" className=\"mt-2\">\n                                    <Form.Label>Email</Form.Label>\n                                    <Form.Control type=\"email\" required ref={emailRef} placeholder=\"Please enter your e-mail\"></Form.Control>\n                                </Form.Group>\n                                <Form.Group id=\"password\" className=\"mt-2\">\n                                    <Form.Label>Password</Form.Label>\n                                    <Form.Control type=\"password\" required ref={passwordRef} placeholder=\"Please enter your password\"></Form.Control>\n                                </Form.Group>\n                                <Button type=\"submit\" className=\"text-center w-100 mt-4\" disabled={loading}>Log in</Button>\n                            </Form>\n                            <div className=\"w-100 text-center mt-3\">\n                                <Link to=\"/forgot-password\">Forgot password?</Link>\n                            </div>\n                        </Card.Body>\n                    </Card>\n                    <div className=\"w-100 text-center mt-2\">\n                        <span style={{ color: 'white' }}>Don't have an account?</span> <Link to=\"/signup\">Sign up</Link>\n                    </div>\n                </div>\n            </Container>\n        </React.Fragment>\n    )\n}\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport { useAuth } from '../contexts/AuthContext'\n\nexport default function PrivateRoute({ component: Component, ...rest }) {\n\n    const { currentUser } = useAuth()\n\n    return (\n        <Route\n            {...rest}\n            render={props => {\n                return currentUser ? <Component {...props} /> : <Redirect to='/login' />\n            }}\n        ></Route>\n    )\n}\n","import React, { useRef, useState } from 'react'\nimport { Form, Button, Card, Alert, Container } from 'react-bootstrap'\nimport { useAuth } from '../contexts/AuthContext'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport { Link } from 'react-router-dom'\n\nexport default function ForgotPassword() {\n\n    const emailRef = useRef()\n\n    const { forgotPassword } = useAuth()\n    const [error, setError] = useState(null)\n    const [message, setMessage] = useState('')\n    const [loading, setLoading] = useState(false)\n\n    const handleResetPassword = async (e) => {\n        e.preventDefault()\n\n        try {\n            setError('');\n            setLoading(true);\n            await forgotPassword(emailRef.current.value);\n            setMessage('An email has been sent to your inbox. Please check it for further information on how to reset your password!')\n        } catch (e) {\n            setError('Email does not exist!')\n        }\n        setLoading(false)\n    }\n\n    return (\n        <React.Fragment>\n            <Container className=\"d-flex align-items-center justify-content-center\" style={{ minHeight: \"100vh\" }}>\n                <div className=\"w-100\" style={{ maxWidth: '400px' }}>\n                    <Card>\n                        <Card.Body>\n                            <h2 className=\"text-center mb-4\">Sign in</h2>\n                            {error && <Alert variant=\"danger\">{error}</Alert>}\n                            {message && <Alert variant=\"success\">{message}</Alert>}\n                            <Form onSubmit={handleResetPassword}>\n                                <Form.Group id=\"email\" className=\"mt-2\">\n                                    <Form.Label>Email</Form.Label>\n                                    <Form.Control type=\"email\" required ref={emailRef} placeholder=\"Please enter your e-mail\"></Form.Control>\n                                </Form.Group>\n                                <Button type=\"submit\" className=\"text-center w-100 mt-4\" disabled={loading}>Reset password</Button>\n                            </Form>\n                            <div className=\"w-100 text-center mt-3\">\n                                Successfully reseted password? <Link to=\"/login\">Log in</Link>\n                            </div>\n                        </Card.Body>\n                    </Card>\n                    <div className=\"w-100 text-center mt-2\">\n                        <span style={{ color: 'white' }}>Don't have an account?</span> <Link to=\"/signup\">Sign up</Link>\n                    </div>\n                </div>\n            </Container>\n        </React.Fragment>\n    )\n}\n","import React from 'react'\nimport Signup from './Signup'\n// import { Container } from 'react-bootstrap'\nimport { AuthProvider } from '../contexts/AuthContext';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport Dashboard from './Dashboard'\nimport Login from './Login'\nimport PrivateRoute from './PrivateRoute'\nimport ForgotPassword from './ForgotPassword';\n\n\nfunction App() {\n    return (\n\n\n\n        <Router>\n            <AuthProvider>\n                <Switch>\n                    <PrivateRoute exact path='/' component={Dashboard}></PrivateRoute>\n                    <Route path=\"/signup\" component={Signup}></Route>\n                    <Route path=\"/login\" component={Login}></Route>\n                    <Route path=\"/forgot-password\" component={ForgotPassword}></Route>\n                </Switch>\n            </AuthProvider>\n        </Router>\n\n\n    )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  \n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}